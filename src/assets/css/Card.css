/* src/assets/css/Card.css */
.card-back-design .card-logo {
  width: 60px;
  height: 60px;
  max-width: 80%;
  max-height: 80%;
}
.card-back-design .card-logo-full {
  width: 110%;
  height: 110%;
  object-fit: cover; /* This ensures the logo covers the entire area */
  position: absolute;
  top: -5px;
  left: -10px;
  border-radius: 1px; /* Match the card's border radius */
}
.card-back-design {
  width: 100%;
  height: 100%;
  background-color: #3498db;
  background-image:
    repeating-linear-gradient(45deg,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.1) 15px,
      transparent 15px,
      transparent 30px);
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Close button for zoomed card */
.card-close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 36px;
  height: 36px;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  animation: fadeInButton 1.5s ease forwards;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  transition: background-color 0.2s ease, transform 0.2s ease;
  min-width: 44px;
  min-height: 44px;
}

@keyframes fadeInButton {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.card-close-button:hover {
  background-color: rgba(0, 0, 0, 0.7);
  transform: scale(1.05);
}

.card-close-button:active {
  transform: scale(0.95);
}

.card-close-button svg {
  color: white;
  width: 16px;
  height: 16px;
}
.card.zoomed {
  position: fixed !important;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 600px;
  height: 80vh; /* Use viewport height for better proportions */
  max-height: 700px;
  margin: 0;
  z-index: 1000;
  pointer-events: auto;
  display: flex;
  flex-direction: column;
}

/* Card faces */
.card-front,
.card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 10px;
  overflow: hidden;
}

/* Updated card-back styling for zoomed state */
.card-back {
  background-color: white;
  transform: rotateY(180deg);
  display: flex;
  flex-direction: column;
}

/* Make zoomed card back scrollable */
.card.zoomed .card-back {
  overflow-y: auto;
  max-height: 100%;
  display: flex;
  flex-direction: column;
  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
  overscroll-behavior: contain; /* Prevent parent scrolling when reaching the edge */
  touch-action: pan-y; /* Allow vertical touch scrolling */
  position: relative;
}

.card-back img {
  width: 100%;
  height: 250px; /* Fixed height for image in zoomed state */
  object-fit: cover;
  flex-shrink: 0;
}

.card.zoomed .card-back img {
  height: 400px; /* Larger image in zoomed state */
  object-fit: scale-down;
}

.card-back h4 {
  color: #2c3e50;
  padding: 10px 15px;
  margin: 0;
  font-size: 1rem;
  flex-shrink: 0;
}

.card.zoomed .card-back h4 {
  font-size: 1.8rem;
  padding: 15px 20px;
}

/* New styles for card details content */
.card-details-content {
  padding: 0 20px 20px 20px;
  color: #333;
  line-height: 1.6;
  width: 100%;
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;
  user-select: text;
}

.card-details-content p {
  margin-bottom: 15px;
  text-align: left;
}

/* Responsive adjustments */
@media (max-width: 600px) {
  .card.zoomed {
    width: 90%;
    max-width: 480px;
    height: 80vh; /* Use viewport height for better mobile experience */
    max-height: 600px;
  }
  
  .card.zoomed .card-back img {
    height: 200px;
  }
  
  .card.zoomed .card-back h4 {
    font-size: 1.5rem;
  }
}
/* Base card styling */
.card {
  height: 250px;
  perspective: 1500px;
  cursor: pointer;
  position: relative;
  border-radius: 10px;
  transition: transform 0.8s cubic-bezier(0.23, 1, 0.32, 1);
  transform-style: preserve-3d;
  backface-visibility: hidden;
  will-change: transform;
}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 1.2s cubic-bezier(0.25, 0.1, 0.25, 1);
  transform-style: preserve-3d;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  backface-visibility: hidden;
  pointer-events: auto;
}

/* Card states */
.card.flipped .card-inner {
  transform: rotateY(180deg);
}

.card.revealed:not(.zoomed) .card-inner {
  transform: rotateY(180deg);
}

.card:not(.flipped):not(.revealed):hover {
  transform: translateY(-10px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
}
.revealed 
{
  visibility: visible;
}

.card-front.hidden {
  display: none;
}



.card-back-design span {
  font-size: 5rem;
  color: rgba(255, 255, 255, 0.8);
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}


/* Card Game Container */
.card-game {
  min-height: 100vh;
  padding: 60px 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  background-color: #f0f4f8;
  position: relative;
  z-index: 1;
}

.card-game h2 {
  font-size: 2.2rem;
  color: #2c3e50;
  margin-bottom: 2.5rem;
  text-align: center;
}

.cards-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  width: 100%;
  max-width: 900px;
  margin: 0 auto;
}

/* Overlay for zoomed cards */
.card-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.overlay-visible {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

/* Card details container and panel */
#card-details-container {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-top: 30px;
  margin-bottom: 60px;
}

.card-details {
  max-width: 600px;
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  text-align: center;
  width: 100%;
  z-index: 1002;
  animation: fadeInDetails 0.5s ease-in-out;
}

.card-details h3 {
  color: #2c3e50;
  margin-bottom: 15px;
  font-size: 1.5rem;
}

.card-details p {
  color: #555;
  line-height: 1.7;
}

@keyframes fadeInDetails {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive grid layout */
@media (max-width: 900px) {
  .cards-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 600px) {
  .cards-container {
    grid-template-columns: 1fr;
  }

  .card-game h2 {
    font-size: 1.8rem;
  }
  
  .card.zoomed {
    width: 90%;
    max-width: 480px;
    height: 360px;
  }
  
  .card-details {
    max-width: 90%;
  }
}

/* Image container with search icon */
.card-image-container {
  position: relative;
  width: 100%;
  overflow: hidden;
}

/* Search icon styling */
.image-search-icon {
  top: 10px;
  left: 10px;
  width: 32px;
  height: 32px;
}

/* Fullscreen image viewer */
.fullscreen-image-viewer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw; /* Use viewport width instead of 100% */
  height: 100vh; /* Use viewport height instead of 100% */
  background-color: rgba(0, 0, 0, 0.9);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999; /* Extremely high z-index to ensure it's above everything */
  cursor: zoom-out;
  animation: fadeIn 0.3s ease-in-out;
}

.fullscreen-image-container {
  position: relative;
  max-width: 90vw; /* Use viewport units here too */
  max-height: 90vh;
}

.fullscreen-image {
  max-width: 100%;
  max-height: 90vh;
  object-fit: contain;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);
  cursor: default;
}

.fullscreen-close-button {
  position: absolute;
  top: -40px;
  right: -40px;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  color: white;
  cursor: pointer;
  transition: background-color 0.2s;
}

.fullscreen-close-button:hover {
  background-color: rgba(255, 255, 255, 0.4);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
/* Add to your Card.css file */

/* Card image loading states */
.card-image-container {
  position: relative;
  width: 100%;
  height: 250px; /* Match the existing card image height */
  background-color: rgba(0, 0, 0, 0.05);
  overflow: hidden;
}

.card.zoomed .card-image-container {
  height: 400px; /* Match the existing zoomed card image height */
}

.card-image-loader {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
}

.card-image-spinner {
  width: 30px;
  height: 30px;
  border: 3px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top-color: #3498db;
  animation: spin 1s ease-in-out infinite;
}

.card-image-hidden {
  opacity: 0;
  transition: opacity 0.3s ease;
}

.card-image-visible {
  opacity: 1;
  transition: opacity 0.3s ease;
}

/* Support for dark theme */
body.dark-theme .card-image-container {
  background-color: rgba(255, 255, 255, 0.05);
}

body.dark-theme .card-image-spinner {
  border-color: rgba(255, 255, 255, 0.1);
  border-top-color: #3498db;
}

/* Add to existing flipping animation to make it smoother */
.card.image-loading .card-inner {
  transition-delay: 0.3s; /* Delay flipping until image is loaded */
}

.card.image-loaded .card-inner {
  transition-delay: 0s; /* No delay when image is loaded */
}

@media (max-width: 600px) {
  .card-image-container {
    height: 200px;
  }
}
